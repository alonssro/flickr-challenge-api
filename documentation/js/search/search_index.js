var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,0.944,1,0.944]],["body/controllers/AppController.html",[0,1.339,1,1.015,2,1.134,3,0.684,4,0.531,5,0.531,6,1.134,7,1.015,8,1.92,9,0.531,10,1.683,11,1.683,12,2.22,13,1.525,14,1.109,15,2.263,16,0.096,17,2.263,18,1.301,19,1.525,20,1.683,21,1.683,22,1.134,23,1.134,24,0.684,25,1.134,26,2.007,27,1.301,28,1.301,29,1.683,30,2.22,31,2.263,32,1.525,33,1.683,34,1.683,35,1.551,36,1.525,37,1.525,38,0.684,39,0.712,40,1.134,41,1.134,42,1.134,43,0.684,44,0.293,45,1.525,46,1.525,47,1.134,48,1.525,49,1.683,50,1.525,51,1.525,52,0.036,53,0.053,54,0.036]],["title/modules/AppModule.html",[55,1.21,56,0.944]],["body/modules/AppModule.html",[1,1.407,2,2.041,3,0.896,4,0.695,5,0.695,16,0.094,35,1.94,38,0.896,39,0.965,40,1.486,43,0.896,44,0.384,52,0.047,53,0.064,54,0.047,55,1.802,56,1.64,57,1.148,58,0.896,59,1.486,60,1.486,61,0.896,62,2.332,63,1.486,64,1.486,65,1.486,66,2.041,67,1.486,68,1.486,69,1.998,70,2.745,71,1.998,72,1.998,73,1.148,74,1.998,75,1.998]],["title/injectables/AppService.html",[39,0.556,76,0.944]],["body/injectables/AppService.html",[3,0.946,4,0.36,5,0.36,7,0.465,8,1.393,9,0.36,10,1.246,11,1.246,12,1.803,14,0.991,16,0.097,18,1.213,20,1.98,21,1.246,22,1.246,23,1.246,24,0.752,25,1.246,26,0.77,27,0.963,28,0.595,29,1.803,30,1.803,33,1.803,34,1.569,35,1.393,38,0.465,39,0.442,41,0.77,42,0.77,43,0.465,44,0.199,47,1.569,49,1.246,52,0.024,53,0.039,54,0.024,73,0.595,76,0.752,77,1.036,78,0.77,79,1.675,80,2.849,81,1.675,82,1.036,83,2.999,84,3.122,85,1.036,86,1.675,87,1.036,88,2.424,89,1.675,90,1.675,91,1.675,92,2.424,93,1.036,94,1.036,95,0.77,96,1.036,97,1.036,98,1.675,99,2.424,100,1.675,101,1.036,102,1.675,103,1.036,104,0.77,105,1.036,106,1.036,107,1.036,108,1.036,109,1.246,110,1.675,111,1.675,112,1.036,113,1.036,114,1.036,115,1.036,116,1.036,117,1.036,118,1.036,119,1.036,120,0.77,121,1.675,122,1.036,123,1.246,124,1.036]],["title/classes/FlickrSearchDto.html",[14,0.732,44,0.405]],["body/classes/FlickrSearchDto.html",[3,1.033,4,0.801,5,0.801,7,1.033,8,1.735,9,0.801,14,1.05,16,0.092,18,1.323,24,1.033,27,2.133,28,1.735,43,1.033,44,0.442,52,0.054,53,0.07,54,0.054,109,2.245,125,2.302,126,2.245,127,1.712,128,2.302,129,2.302,130,2.302,131,3.019,132,3.019,133,2.302,134,3.019]],["title/coverage.html",[135,1.635]],["body/coverage.html",[0,1.09,1,1.09,5,0.846,6,1.807,14,0.846,16,0.09,24,1.09,39,0.642,44,0.467,52,0.057,53,0.073,54,0.057,61,1.09,76,1.09,78,1.807,104,1.807,126,1.807,127,1.807,135,1.397,136,2.43,137,2.43,138,2.43,139,3.457,140,2.43,141,2.43,142,2.43,143,2.43,144,1.807,145,2.43,146,2.43,147,2.43,148,2.43]],["title/dependencies.html",[58,1.132,149,1.772]],["body/dependencies.html",[16,0.096,38,1.146,52,0.06,53,0.075,54,0.06,58,1.146,73,1.469,95,1.9,150,3.539,151,2.555,152,2.555,153,2.555,154,2.555,155,2.555,156,2.555,157,2.555,158,2.555,159,2.555,160,2.555,161,2.555,162,2.555]],["title/miscellaneous/functions.html",[163,1.318,164,1.877]],["body/miscellaneous/functions.html",[9,1.016,16,0.082,52,0.068,53,0.082,54,0.068,61,1.685,123,2.171,144,2.171,163,2.171,164,2.171,165,2.92,166,2.92]],["title/index.html",[9,0.616,167,1.772,168,1.772]],["body/index.html",[4,0.593,7,0.765,16,0.093,52,0.04,53,0.057,54,0.04,135,0.98,169,1.705,170,1.705,171,2.455,172,1.705,173,1.705,174,1.705,175,1.705,176,1.705,177,1.705,178,1.705,179,1.705,180,1.705,181,2.877,182,1.705,183,1.705,184,1.705,185,1.705,186,3.58,187,1.705,188,1.705,189,1.705,190,3.474,191,1.705,192,1.705,193,2.455,194,1.705,195,1.705,196,1.705,197,1.705,198,2.455,199,2.455,200,1.705,201,1.705,202,1.705,203,2.455,204,2.455,205,1.705,206,1.705,207,1.705,208,1.705,209,1.705,210,1.268,211,1.705,212,1.705,213,1.705,214,1.705,215,1.705,216,1.705,217,1.705,218,1.705,219,1.705,220,1.705,221,1.705,222,1.705,223,1.705,224,1.705,225,1.705,226,1.705,227,1.705,228,1.705]],["title/modules.html",[57,1.635]],["body/modules.html",[16,0.084,52,0.071,53,0.084,54,0.071,56,1.355,57,1.736,210,2.246,229,3.021,230,3.021,231,3.021]],["title/overview.html",[232,2.115]],["body/overview.html",[0,1.122,16,0.082,39,0.925,44,0.481,52,0.058,53,0.074,54,0.058,55,1.83,56,1.655,58,1.122,59,1.859,60,1.859,61,1.122,62,1.859,63,1.859,64,1.859,65,1.859,66,2.368,67,1.859,68,1.859,76,1.122,120,2.743,232,1.859]]],"invertedIndex":[["",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/FlickrSearchDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["0.1.13",{"_index":157,"title":{},"body":{"dependencies.html":{}}}],["0.12.0",{"_index":162,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":151,"title":{},"body":{"dependencies.html":{}}}],["1",{"_index":120,"title":{},"body":{"injectables/AppService.html":{},"overview.html":{}}}],["1/1",{"_index":146,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":139,"title":{},"body":{"coverage.html":{}}}],["2/2",{"_index":143,"title":{},"body":{"coverage.html":{}}}],["3.0.2",{"_index":159,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":140,"title":{},"body":{"coverage.html":{}}}],["3/4",{"_index":142,"title":{},"body":{"coverage.html":{}}}],["6.5.4",{"_index":161,"title":{},"body":{"dependencies.html":{}}}],["7.0.0",{"_index":150,"title":{},"body":{"dependencies.html":{}}}],["75",{"_index":141,"title":{},"body":{"coverage.html":{}}}],["amazing",{"_index":211,"title":{},"body":{"index.html":{}}}],["angular",{"_index":180,"title":{},"body":{"index.html":{}}}],["api",{"_index":134,"title":{},"body":{"classes/FlickrSearchDto.html":{}}}],["api_key",{"_index":114,"title":{},"body":{"injectables/AppService.html":{}}}],["app",{"_index":188,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":40,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":177,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":56,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":39,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["array",{"_index":88,"title":{},"body":{"injectables/AppService.html":{}}}],["async",{"_index":80,"title":{},"body":{"injectables/AppService.html":{}}}],["author",{"_index":221,"title":{},"body":{"index.html":{}}}],["await",{"_index":110,"title":{},"body":{"injectables/AppService.html":{}}}],["backers",{"_index":212,"title":{},"body":{"index.html":{}}}],["body",{"_index":37,"title":{},"body":{"controllers/AppController.html":{}}}],["bootstrap",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":231,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":229,"title":{},"body":{"modules.html":{}}}],["building",{"_index":172,"title":{},"body":{"index.html":{}}}],["class",{"_index":44,"title":{"classes/FlickrSearchDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/FlickrSearchDto.html":{},"coverage.html":{},"overview.html":{}}}],["classes",{"_index":125,"title":{},"body":{"classes/FlickrSearchDto.html":{}}}],["cluster_appmodule",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["configmodule",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":84,"title":{},"body":{"injectables/AppService.html":{}}}],["const",{"_index":99,"title":{},"body":{"injectables/AppService.html":{}}}],["constructor",{"_index":81,"title":{},"body":{"injectables/AppService.html":{}}}],["constructor(httpservice",{"_index":82,"title":{},"body":{"injectables/AppService.html":{}}}],["constructor(private",{"_index":45,"title":{},"body":{"controllers/AppController.html":{}}}],["containing",{"_index":90,"title":{},"body":{"injectables/AppService.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"coverage.html":{},"overview.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["coverage",{"_index":135,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["data",{"_index":109,"title":{},"body":{"injectables/AppService.html":{},"classes/FlickrSearchDto.html":{}}}],["declarations",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decorators",{"_index":15,"title":{},"body":{"controllers/AppController.html":{}}}],["defined",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/FlickrSearchDto.html":{}}}],["dependencies",{"_index":58,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":7,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/FlickrSearchDto.html":{},"index.html":{}}}],["development",{"_index":189,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":136,"title":{},"body":{"coverage.html":{}}}],["dto/flickr",{"_index":41,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["e2e",{"_index":200,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":173,"title":{},"body":{"index.html":{}}}],["empty",{"_index":107,"title":{},"body":{"injectables/AppService.html":{}}}],["entry",{"_index":123,"title":{},"body":{"injectables/AppService.html":{},"miscellaneous/functions.html":{}}}],["export",{"_index":43,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/FlickrSearchDto.html":{}}}],["exports",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["express",{"_index":154,"title":{},"body":{"dependencies.html":{}}}],["feed",{"_index":34,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/FlickrSearchDto.html":{},"coverage.html":{}}}],["flickr",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/FlickrSearchDto.html":{}}}],["flickr.photos.search",{"_index":116,"title":{},"body":{"injectables/AppService.html":{}}}],["flickrapikey",{"_index":100,"title":{},"body":{"injectables/AppService.html":{}}}],["flickrphoto",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["flickrsearchdto",{"_index":14,"title":{"classes/FlickrSearchDto.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/FlickrSearchDto.html":{},"coverage.html":{}}}],["flickrsearchdto.text",{"_index":102,"title":{},"body":{"injectables/AppService.html":{}}}],["format",{"_index":117,"title":{},"body":{"injectables/AppService.html":{}}}],["framework",{"_index":171,"title":{},"body":{"index.html":{}}}],["function",{"_index":145,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":164,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get('/feed",{"_index":31,"title":{},"body":{"controllers/AppController.html":{}}}],["get('https://www.flickr.com/services/feeds/photos_public.gne",{"_index":122,"title":{},"body":{"injectables/AppService.html":{}}}],["get('https://www.flickr.com/services/rest",{"_index":112,"title":{},"body":{"injectables/AppService.html":{}}}],["getflickrphotos",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getflickrphotos(@body",{"_index":48,"title":{},"body":{"controllers/AppController.html":{}}}],["getflickrphotos(flickrphoto",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["getflickrphotos(flickrsearchdto",{"_index":86,"title":{},"body":{"injectables/AppService.html":{}}}],["getpublicfeed",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":167,"title":{"index.html":{}},"body":{}}],["grow",{"_index":207,"title":{},"body":{"index.html":{}}}],["heavily",{"_index":178,"title":{},"body":{"index.html":{}}}],["here",{"_index":218,"title":{},"body":{"index.html":{}}}],["httpexception",{"_index":96,"title":{},"body":{"injectables/AppService.html":{}}}],["httpexception('search",{"_index":105,"title":{},"body":{"injectables/AppService.html":{}}}],["httpmodule",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["https://nestjs.com",{"_index":225,"title":{},"body":{"index.html":{}}}],["httpservice",{"_index":83,"title":{},"body":{"injectables/AppService.html":{}}}],["httpstatus",{"_index":97,"title":{},"body":{"injectables/AppService.html":{}}}],["httpstatus.bad_request",{"_index":108,"title":{},"body":{"injectables/AppService.html":{}}}],["identifier",{"_index":137,"title":{},"body":{"coverage.html":{}}}],["import",{"_index":35,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{}}}],["imports",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/FlickrSearchDto.html":{},"miscellaneous/functions.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/FlickrSearchDto.html":{}}}],["injectable",{"_index":76,"title":{"injectables/AppService.html":{}},"body":{"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["injectables",{"_index":77,"title":{},"body":{"injectables/AppService.html":{}}}],["inspired",{"_index":179,"title":{},"body":{"index.html":{}}}],["installation",{"_index":185,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":187,"title":{},"body":{"index.html":{}}}],["join",{"_index":214,"title":{},"body":{"index.html":{}}}],["json",{"_index":118,"title":{},"body":{"injectables/AppService.html":{}}}],["json.parse(parser.tojson(data",{"_index":124,"title":{},"body":{"injectables/AppService.html":{}}}],["kamil",{"_index":222,"title":{},"body":{"index.html":{}}}],["legend",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["license",{"_index":228,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":204,"title":{},"body":{"index.html":{}}}],["matching",{"_index":53,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/FlickrSearchDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["metadata",{"_index":156,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":115,"title":{},"body":{"injectables/AppService.html":{}}}],["methods",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["miscellaneous",{"_index":163,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["mit",{"_index":203,"title":{},"body":{"index.html":{}}}],["mode",{"_index":193,"title":{},"body":{"index.html":{}}}],["module",{"_index":55,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":57,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{}}}],["more",{"_index":217,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":223,"title":{},"body":{"index.html":{}}}],["name",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["nest",{"_index":181,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":227,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":38,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":152,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":153,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":104,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["node.js",{"_index":170,"title":{},"body":{"index.html":{}}}],["nojsoncallback",{"_index":119,"title":{},"body":{"injectables/AppService.html":{}}}],["npm",{"_index":186,"title":{},"body":{"index.html":{}}}],["object",{"_index":129,"title":{},"body":{"classes/FlickrSearchDto.html":{}}}],["objects",{"_index":89,"title":{},"body":{"injectables/AppService.html":{}}}],["open",{"_index":205,"title":{},"body":{"index.html":{}}}],["optional",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["out",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["overview",{"_index":232,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":149,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":47,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["parameters",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["params",{"_index":113,"title":{},"body":{"injectables/AppService.html":{}}}],["parser",{"_index":94,"title":{},"body":{"injectables/AppService.html":{}}}],["per",{"_index":91,"title":{},"body":{"injectables/AppService.html":{}}}],["photo",{"_index":92,"title":{},"body":{"injectables/AppService.html":{}}}],["photos",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["please",{"_index":215,"title":{},"body":{"index.html":{}}}],["point",{"_index":166,"title":{},"body":{"miscellaneous/functions.html":{}}}],["post",{"_index":36,"title":{},"body":{"controllers/AppController.html":{}}}],["post('/photos",{"_index":17,"title":{},"body":{"controllers/AppController.html":{}}}],["private",{"_index":98,"title":{},"body":{"injectables/AppService.html":{}}}],["production",{"_index":195,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":169,"title":{},"body":{"index.html":{}}}],["project",{"_index":206,"title":{},"body":{"index.html":{}}}],["promise",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["properties",{"_index":131,"title":{},"body":{"classes/FlickrSearchDto.html":{}}}],["providers",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["public",{"_index":33,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["query",{"_index":106,"title":{},"body":{"injectables/AppService.html":{}}}],["read",{"_index":216,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":46,"title":{},"body":{"controllers/AppController.html":{}}}],["receive",{"_index":130,"title":{},"body":{"classes/FlickrSearchDto.html":{}}}],["reflect",{"_index":155,"title":{},"body":{"dependencies.html":{}}}],["repository",{"_index":184,"title":{},"body":{"index.html":{}}}],["reset",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["result",{"_index":52,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/FlickrSearchDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["results",{"_index":54,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/FlickrSearchDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["return",{"_index":49,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["returns",{"_index":29,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["rimraf",{"_index":158,"title":{},"body":{"dependencies.html":{}}}],["run",{"_index":190,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":160,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":174,"title":{},"body":{"index.html":{}}}],["search",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/FlickrSearchDto.html":{}}}],["search.dto",{"_index":42,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["search.dto.ts",{"_index":127,"title":{},"body":{"classes/FlickrSearchDto.html":{},"coverage.html":{}}}],["search.dto.ts:8",{"_index":133,"title":{},"body":{"classes/FlickrSearchDto.html":{}}}],["server",{"_index":175,"title":{},"body":{"index.html":{}}}],["service",{"_index":79,"title":{},"body":{"injectables/AppService.html":{}}}],["side",{"_index":176,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/FlickrSearchDto.html":{},"index.html":{}}}],["sponsors",{"_index":209,"title":{},"body":{"index.html":{}}}],["src/.../main.ts",{"_index":165,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:17",{"_index":19,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:25",{"_index":32,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":78,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:19",{"_index":85,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:35",{"_index":87,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:63",{"_index":93,"title":{},"body":{"injectables/AppService.html":{}}}],["src/dto/flickr",{"_index":126,"title":{},"body":{"classes/FlickrSearchDto.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":144,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["start",{"_index":191,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":194,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":196,"title":{},"body":{"index.html":{}}}],["started",{"_index":168,"title":{"index.html":{}},"body":{}}],["starter",{"_index":183,"title":{},"body":{"index.html":{}}}],["statements",{"_index":138,"title":{},"body":{"coverage.html":{}}}],["stay",{"_index":219,"title":{},"body":{"index.html":{}}}],["string",{"_index":132,"title":{},"body":{"classes/FlickrSearchDto.html":{}}}],["support",{"_index":210,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":230,"title":{},"body":{"modules.html":{}}}],["table",{"_index":148,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":147,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["test",{"_index":199,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":202,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":201,"title":{},"body":{"index.html":{}}}],["tests",{"_index":198,"title":{},"body":{"index.html":{}}}],["text",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/FlickrSearchDto.html":{}}}],["thanks",{"_index":208,"title":{},"body":{"index.html":{}}}],["this.appservice.getflickrphotos(flickrphoto",{"_index":50,"title":{},"body":{"controllers/AppController.html":{}}}],["this.appservice.getpublicfeed",{"_index":51,"title":{},"body":{"controllers/AppController.html":{}}}],["this.configservice.get('flickr_api_key",{"_index":101,"title":{},"body":{"injectables/AppService.html":{}}}],["this.httpservice",{"_index":111,"title":{},"body":{"injectables/AppService.html":{}}}],["throw",{"_index":103,"title":{},"body":{"injectables/AppService.html":{}}}],["topromise",{"_index":121,"title":{},"body":{"injectables/AppService.html":{}}}],["touch",{"_index":220,"title":{},"body":{"index.html":{}}}],["transfet",{"_index":128,"title":{},"body":{"classes/FlickrSearchDto.html":{}}}],["twitter",{"_index":226,"title":{},"body":{"index.html":{}}}],["type",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/FlickrSearchDto.html":{},"coverage.html":{}}}],["typescript",{"_index":182,"title":{},"body":{"index.html":{}}}],["unit",{"_index":197,"title":{},"body":{"index.html":{}}}],["watch",{"_index":192,"title":{},"body":{"index.html":{}}}],["website",{"_index":224,"title":{},"body":{"index.html":{}}}],["xml2json",{"_index":95,"title":{},"body":{"injectables/AppService.html":{},"dependencies.html":{}}}],["you'd",{"_index":213,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n            \n                Description\n            \n            \n                Flickr Controller\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getFlickrPhotos\n                            \n                            \n                                getPublicFeed\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFlickrPhotos\n                        \n                        \n                    \n                \n            \n            \n                \ngetFlickrPhotos(flickrPhoto: FlickrSearchDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/photos')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:17\n                \n            \n\n\n            \n                \n                    Get photos by tag from Flickr\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    flickrPhoto\n                                    \n                                                FlickrSearchDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Text to search\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPublicFeed\n                        \n                        \n                    \n                \n            \n            \n                \ngetPublicFeed()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/feed')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:25\n                \n            \n\n\n            \n                \n                    Get Flickr public feed\n\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Post, Body, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\nimport { FlickrSearchDto } from './dto/flickr-search.dto';\n\n/**\n * Flickr Controller\n */\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  /**\n   * Get photos by tag from Flickr\n   * @param  {FlickrSearchDto} flickrPhoto  Text to search\n   */\n  @Post('/photos')\n  getFlickrPhotos(@Body() flickrPhoto: FlickrSearchDto): Promise {\n    return this.appService.getFlickrPhotos(flickrPhoto);\n  }\n\n  /**\n   * Get Flickr public feed\n   */\n  @Get('/feed')\n  getPublicFeed(): Promise {\n    return this.appService.getPublicFeed();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppService\n\nAppService\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, HttpModule } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { ConfigModule } from '@nestjs/config';\n\n@Module({\n  imports: [ConfigModule.forRoot(), HttpModule],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n            \n                Description\n            \n            \n                Flickr Service\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getFlickrPhotos\n                            \n                            \n                                    Async\n                                getPublicFeed\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpService: HttpService, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/app.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getFlickrPhotos\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFlickrPhotos(flickrSearchDto: FlickrSearchDto)\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:35\n                \n            \n\n\n            \n                \n                    Get photos by tag from Flickr\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    flickrSearchDto\n                                    \n                                                FlickrSearchDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        Array of Objects containing info per photo\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getPublicFeed\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPublicFeed()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:63\n                \n            \n\n\n            \n                \n                    Get public feed\n\n\n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        Array of public photos\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import * as parser from 'xml2json';\n\nimport {\n  Injectable,\n  HttpService,\n  HttpException,\n  HttpStatus,\n} from '@nestjs/common';\n\nimport { ConfigService } from '@nestjs/config';\n\nimport { FlickrSearchDto } from './dto/flickr-search.dto';\n\n/**\n * Flickr Service\n */\n@Injectable()\nexport class AppService {\n  /**\n   *\n   * @param httpService\n   * @param configService\n   */\n  constructor(\n    private httpService: HttpService,\n    private configService: ConfigService,\n  ) {}\n\n  /**\n   * Get photos by tag from Flickr\n   * @param  {FlickrSearchDto} flickrPhoto  Text to search\n   * @returns Array of Objects containing info per photo\n   */\n  async getFlickrPhotos(flickrSearchDto: FlickrSearchDto): Promise {\n    const flickrApikey = this.configService.get('FLICKR_API_KEY');\n\n    if (!flickrSearchDto.text)\n      throw new HttpException('Search Query Empty', HttpStatus.BAD_REQUEST);\n\n    const {\n      data: {\n        photos: { photo },\n      },\n    }: any = await this.httpService\n      .get('https://www.flickr.com/services/rest', {\n        params: {\n          api_key: flickrApikey,\n          text: flickrSearchDto.text,\n          method: 'flickr.photos.search',\n          format: 'json',\n          nojsoncallback: 1,\n        },\n      })\n      .toPromise();\n    return photo;\n  }\n\n  /**\n   * Get public feed\n   * @returns Array of public photos\n   */\n  async getPublicFeed(): Promise {\n    const { data }: any = await this.httpService\n      .get('https://www.flickr.com/services/feeds/photos_public.gne', {})\n      .toPromise();\n    const {\n      feed: { entry },\n    }: any = JSON.parse(parser.toJson(data));\n    return entry;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FlickrSearchDto.html":{"url":"classes/FlickrSearchDto.html","title":"class - FlickrSearchDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FlickrSearchDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dto/flickr-search.dto.ts\n        \n\n            \n                Description\n            \n            \n                Data transfet object to receive data\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                text\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            text\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/dto/flickr-search.dto.ts:8\n                            \n                        \n\n                \n                    \n                        Text to search on flickr api\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class FlickrSearchDto {\n  /**\n   * Text to search on flickr api\n   */\n  text: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/dto/flickr-search.dto.ts\n            \n            class\n            FlickrSearchDto\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^7.0.0\n        \n            @nestjs/config : ^0.4.0\n        \n            @nestjs/core : ^7.0.0\n        \n            @nestjs/platform-express : ^7.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.5.4\n        \n            xml2json : ^0.12.0\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n            \n                \n                    Entry point\n\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications, heavily inspired by Angular.\n    \n\n\n\n\n\n\n\n\n\n  \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\n  Nest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppService\n\nAppService\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Controller\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
